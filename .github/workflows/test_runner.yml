name: Run tests
on:
  push:
    branches:
      - master
      - 4.*.z
  pull_request:
    branches:
      - master
      - 4.*.z
jobs:
  run-tests:
    runs-on: ${{ matrix.os }}
    name: Run tests with Python ${{ matrix.python-version }} on ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ 2.7, 3.9 ]
        os: [ ubuntu-latest, windows-latest ]
      fail-fast: false
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'
      - name: Checkout to code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          pip install -r requirements-test.txt
      - name: Run tests
        env:
          HAZELCAST_ENTERPRISE_KEY: ${{ secrets.HAZELCAST_ENTERPRISE_KEY }}
        run: python run_tests.py
      - name: Upload remote controller logs on test failure
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: rc-logs-${{ matrix.python-version }}-${{ matrix.os }}
          path: |
            rc_stderr.log
            rc_stdout.log
      - name: Publish results to Codecov
        uses: codecov/codecov-action@v1
        with:
          files: ./coverage.xml
  run-linter:
    runs-on: ubuntu-latest
    name: Run black to check the code style
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Checkout to code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          pip install -r requirements-dev.txt
      - name: Run black
        run: |
          black --check --config black.toml .
  generate_docs:
    runs-on: ubuntu-latest
    name: Generate documentation
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Checkout to code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          pip install -r requirements-dev.txt
      - name: Generate documentation
        working-directory: docs
        run: |
          make html SPHINXOPTS="-W --keep-going"
